CREATE TABLE "assistantThread" (
	"id" text PRIMARY KEY NOT NULL,
	"userId" text(256) NOT NULL,
	"threadId" text(256) NOT NULL,
	"preview" text(256) NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL
);

CREATE TABLE "channel" (
	"id" text PRIMARY KEY NOT NULL,
	"slug" text(256) NOT NULL,
	"description" text(512) NOT NULL,
	"workspaceId" text NOT NULL,
	"channelType" text(256) NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE TABLE "conversation" (
	"id" text PRIMARY KEY NOT NULL,
	"channelId" text NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL
);

CREATE TABLE "conversationMessage" (
	"id" text PRIMARY KEY NOT NULL,
	"messageId" text NOT NULL,
	"conversationId" text NOT NULL
);

CREATE TABLE "conversationNeedsSummary" (
	"id" text PRIMARY KEY NOT NULL,
	"conversationId" text NOT NULL,
	FOREIGN KEY ("conversationId") REFERENCES "conversation"("id") ON UPDATE no action ON DELETE cascade
);

CREATE TABLE "conversationSummary" (
	"id" integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	"channelId" text NOT NULL,
	"conversationId" text NOT NULL,
	"summaryText" text(500) NOT NULL,
	"summaryEmbedding" text NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL
);

CREATE TABLE "conversationSummaryRef" (
	"id" text PRIMARY KEY NOT NULL,
	"userId" text NOT NULL,
	"conversationSummaryId" integer NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL
);

CREATE TABLE "meeting" (
	"id" text PRIMARY KEY NOT NULL,
	"name" text(256) NOT NULL,
	"description" text(512) NOT NULL,
	"recurringMeetingId" text,
	"scheduledStartAt" integer NOT NULL,
	"scheduledEndAt" integer NOT NULL,
	"startedAt" integer,
	"endedAt" integer,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE TABLE "meetingMember" (
	"id" text PRIMARY KEY NOT NULL,
	"bIsHost" integer DEFAULT 0 NOT NULL,
	"bIsRequiredToAttend" integer DEFAULT 1 NOT NULL,
	"meetingId" text NOT NULL,
	"userId" text NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE TABLE "meetingMessage" (
	"id" text PRIMARY KEY NOT NULL,
	"meetingId" text NOT NULL,
	"userId" text NOT NULL,
	"message" text(60000) NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE TABLE "meetingTranscriptedMessage" (
	"id" text PRIMARY KEY NOT NULL,
	"meetingId" text NOT NULL,
	"userId" text NOT NULL,
	"message" text(60000) NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE TABLE "message" (
	"id" text PRIMARY KEY NOT NULL,
	"channelId" text NOT NULL,
	"userId" text NOT NULL,
	"message" text(60000) NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE TABLE "recurringMeeting" (
	"id" text PRIMARY KEY NOT NULL,
	"name" text(256) NOT NULL,
	"daysOfWeek" text,
	"timeOfDay" integer,
	"durationInMinutes" integer NOT NULL,
	"until" integer,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE TABLE "unGroupedMessage" (
	"id" text PRIMARY KEY NOT NULL,
	"messageId" text NOT NULL,
	FOREIGN KEY ("messageId") REFERENCES "message"("id") ON UPDATE no action ON DELETE cascade
);

CREATE TABLE "user" (
	"internalId" integer PRIMARY KEY NOT NULL,
	"userId" text(256) NOT NULL,
	"discordId" integer,
	"role" text(256) NOT NULL,
	"firstName" text(1024),
	"lastName" text(1024),
	"fullName" text(1024),
	"email" text(256) NOT NULL,
	"imageUrl" text(10000),
	"lastKnownStatus" text,
	"lastKnownStatusConfirmedAt" integer,
	"lastKnownStatusSwitchedAt" integer,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL
);

CREATE TABLE "workspace" (
	"id" text PRIMARY KEY NOT NULL,
	"name" text(256) NOT NULL,
	"slug" text(256) NOT NULL,
	"description" text(512) NOT NULL,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE TABLE "workspaceMember" (
	"id" text PRIMARY KEY NOT NULL,
	"workspaceId" text NOT NULL,
	"userId" text NOT NULL,
	"bCanManageChannels" integer DEFAULT 0,
	"bCanManageWorkspaceMembers" integer DEFAULT 0,
	"bCanManageWorkspaceSettings" integer DEFAULT 0,
	"createdAt" integer NOT NULL,
	"updatedAt" integer NOT NULL,
	"deletedAt" integer
);

CREATE UNIQUE INDEX "channel_workspaceId_slug_unique" ON "channel" ("workspaceId","slug");
CREATE UNIQUE INDEX "conversationNeedsSummary_conversationId_unique" ON "conversationNeedsSummary" ("conversationId");
CREATE UNIQUE INDEX "meeting_name_unique" ON "meeting" ("name");
CREATE UNIQUE INDEX "recurringMeeting_name_unique" ON "recurringMeeting" ("name");
CREATE UNIQUE INDEX "unGroupedMessage_messageId_unique" ON "unGroupedMessage" ("messageId");
CREATE UNIQUE INDEX "user_userId_unique" ON "user" ("userId");
CREATE UNIQUE INDEX "user_discordId_unique" ON "user" ("discordId");
CREATE UNIQUE INDEX "user_email_unique" ON "user" ("email");
CREATE INDEX "email_idx" ON "user" ("email");
CREATE INDEX "userId_idx" ON "user" ("userId");
CREATE UNIQUE INDEX "workspace_slug_unique" ON "workspace" ("slug");
CREATE INDEX "slug_idx" ON "workspace" ("slug");