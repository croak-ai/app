
# For DB Migrations
# 
# Since migrations need to run on ALL databases, we need to provide a list of all groups, along with a secret for each group.
#
# For MIGRATIONS_TURSO_ORG_SLUG, you can run the following command:
# turso org list
#
# The MIGRATIONS_TURSO_API_BASE_URL is the base url for the Turso API. This is the same for all organizations. However if we allow self hosting, this will change.
# "https://api.turso.tech"
#
# The MIGRATIONS_TURSO_AUTH_TOKEN is the auth token that will let the API act on your behalf, it's used to get all of the databases in the organization.
# turso auth api-tokens mint $TOKEN_NAME
#
# *NOTE* Make sure to revoke the token after you're done with the migrations.
# 
# turso auth api-tokens revoke $TOKEN_NAME
#
#
# The MIGRATIONS_TURSO_ORG_DB_GROUPS is a list of all of the groups in the organization we want to run migrations on with a secret that has write access to those groups.
# To get secrets for a group, you have to get a token for a database within that group and add the --group flag. With that --group flag, the token will be valid for all databases in the group.
# 
# Additionally, migrations will only run on databases whose names start with "org-"
#
# So for each group that you want to run migrations on, you have to get a DB connection token with the --group flag... I know it's a bit of a pain.
#
# you can run the following command to get a list of all of the databases in your organization:
# 
# turso db list
#
# Example:
# NAME            GROUP         URL
# some-datab      ams-group     libsql://some-datab-spartanfa.turso.io
# t-amstest     ams-group     libsql://org-amstest-spartanfa.turso.io
# local           default       libsql://local-spartanfa.turso.io
# t-default1    default       libsql://org-default1-spartanfa.turso.io
# t-default2    default       libsql://org-default2-spartanfa.turso.io
#
#
# so if you want to migrations in both organizations you have to add both of them to the list.
# you can see that the "default" group has two databases that start with "org-" but you only need a secret from one of them.
# 
# turso db tokens create org-default1 --group
#
# That token will be valid for all databases in the "default" group.




MIGRATIONS_TURSO_ORG_SLUG=<YOUR_TURSO_ORG_SLUG>
MIGRATIONS_TURSO_API_BASE_URL="https://api.turso.tech"
MIGRATIONS_TURSO_AUTH_TOKEN_NAME=<AUTH_TOKEN_NAME>
MIGRATIONS_TURSO_AUTH_TOKEN=<YOUR_TURSO_AUTH_TOKEN>
MIGRATIONS_TURSO_ORG_DB_GROUPS='[{"name": "some-group", "secret": "example-secret"}, {"some-other-group", "example-secret"}]'

# ---------------------------------------------------------------------------------------------------------------------
# For TRPC 
#
# Each TRPC server will support one database "group". TRPC_TURSO_DB_TOKEN This is the auth token for that group.
#
# First to get a list of the databases run:
#
# turso db list
#
# To Get a token that is valid for an entire group, you can run the following command:
# 
# turso db tokens create {name-of-database} --group
#
# Even though you have to define a specifc database, with the --group flag, the token will be valid for all databases in the group.
# 
# For TRPC_TURSO_ORG_SLUG, you can run the following command:
# turso org list
#

TRPC_TURSO_API_BASE_URL=<YOUR_TURSO_API_BASE_URL>
TRPC_TURSO_DB_TOKEN=<YOUR_TURSO_DB_TOKEN>
TRPC_TURSO_AUTH_TOKEN=<YOUR_TURSO_AUTH_TOKEN>
TRPC_TURSO_ORG_SLUG=<YOUR_TURSO_ORG_SLUG>
TRPC_TURSO_DEFAULT_GROUP=<YOUR_TURSO_DEFAULT_GROUP>

# For Next.js
NEXT_PUBLIC_BASE_URL=http://localhost:3000
# TRPC server entrypoint
NEXT_PUBLIC_TRPC_BASE_URL="http://localhost:3002/trpc"

# For Clerk
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=<YOUR_CLERK_PUBLISHABLE_KEY>
CLERK_SECRET_KEY=<CLERK_SECRET_KEY>
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/

# For OpenAI
OPENAI_API_KEY=<YOUR_OPENAI_API_KEY>
